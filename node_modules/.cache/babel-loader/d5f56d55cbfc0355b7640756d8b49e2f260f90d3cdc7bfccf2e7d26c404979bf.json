{"ast":null,"code":"var _jsxFileName = \"/Users/rheajaisinghani/Desktop/LLMs Class/lights-camera-reACTion/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, Paper, Stepper, Step, StepLabel, CircularProgress, Alert } from '@mui/material';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000/api';\nconst steps = ['API Key', 'Initializing', 'Keywords', 'Confirm Keywords', 'Sitcom Concept', 'Outline'];\nconst categories = [{\n  key: 'setting',\n  label: 'Setting',\n  prompt: 'Enter settings/locations (comma-separated):'\n}, {\n  key: 'characters',\n  label: 'Characters',\n  prompt: 'Enter main characters (comma-separated):'\n}, {\n  key: 'themes',\n  label: 'Themes',\n  prompt: 'Enter themes/ideas (comma-separated):'\n}, {\n  key: 'tone_genre',\n  label: 'Tone/Genre',\n  prompt: 'Enter tone or genre (comma-separated):'\n}];\nfunction parseSitcomConcept(concept) {\n  // Try to extract the title and description using regex\n  const match = concept.match(/Title:\\s*\"?([^\"]+)\"?\\s*Description:?\\s*(.*)/is);\n  if (match) {\n    return {\n      title: match[1].trim(),\n      description: match[2].trim()\n    };\n  }\n  // fallback: just return the whole thing as description\n  return {\n    title: '',\n    description: concept\n  };\n}\nfunction formatOutline(outline) {\n  if (!outline) return '';\n  // Split into lines\n  const lines = outline.split('\\n').filter(line => line.trim() !== '');\n  const elements = [];\n  lines.forEach((line, idx) => {\n    if (line.startsWith('Episode Concept:')) {\n      elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Episode Concept:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" \", line.replace('Episode Concept:', '').trim()]\n      }, `epconcept-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n    } else if (line.match(/^Scene \\d+:/)) {\n      // Split scene number/title from description\n      const match = line.match(/^(Scene \\d+:\\s*\"[^\"]+\"\\s*)(.*)/);\n      if (match) {\n        elements.push(/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: match[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            children: match[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, `scene-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this));\n      } else {\n        elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 2\n          },\n          children: line\n        }, `scene-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 2\n        },\n        children: line\n      }, `other-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  return elements;\n}\nfunction App() {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [apiKey, setApiKey] = useState('');\n  const [keywords, setKeywords] = useState({\n    setting: '',\n    characters: '',\n    themes: '',\n    tone_genre: ''\n  });\n  const [sitcomConcept, setSitcomConcept] = useState('');\n  const [outline, setOutline] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  // Generate sitcom concept when landing on the sitcom concept step\n  useEffect(() => {\n    if (activeStep === 4 && !sitcomConcept) {\n      generateConcept();\n    }\n    // eslint-disable-next-line\n  }, [activeStep]);\n\n  // Generate outline when landing on the outline step\n  useEffect(() => {\n    if (activeStep === 5 && !outline) {\n      generateOutline();\n    }\n    // eslint-disable-next-line\n  }, [activeStep]);\n  const generateConcept = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-concept`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          keywords\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setSitcomConcept(data.concept);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateOutline = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-outline`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          concept: sitcomConcept\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setOutline(data.outline);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleNext = async () => {\n    setError('');\n    // Simulate initialization\n    if (activeStep === 1) {\n      setProgress(0);\n      setLoading(true);\n      let value = 0;\n      const interval = setInterval(() => {\n        value += 10;\n        setProgress(value);\n        if (value >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          setActiveStep(prev => prev + 1);\n        }\n      }, 100);\n      return;\n    }\n    setActiveStep(prev => prev + 1);\n  };\n  const handleBack = () => {\n    setError('');\n    setActiveStep(prev => prev - 1);\n  };\n  const handleKeywordChange = category => event => {\n    setKeywords({\n      ...keywords,\n      [category]: event.target.value\n    });\n  };\n  const renderStepContent = step => {\n    if (step === 0) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Enter your OpenAI API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"password\",\n          value: apiKey,\n          onChange: e => setApiKey(e.target.value),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this);\n    }\n    if (step === 1) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: progress,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Initializing embedding model and AI agents...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this);\n    }\n    if (step === 2) {\n      // All keyword categories on one screen\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Enter Keywords for Your Sitcom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: cat.label,\n          value: keywords[cat.key],\n          onChange: handleKeywordChange(cat.key),\n          margin: \"normal\",\n          helperText: cat.prompt,\n          sx: {\n            mb: 2\n          }\n        }, cat.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this);\n    }\n    if (step === 3) {\n      // Confirmation step\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirm Your Keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            mt: 2\n          },\n          children: categories.map(cat => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [cat.label, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: keywords[cat.key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, cat.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this);\n    }\n    if (step === 4) {\n      // Sitcom concept step\n      const {\n        title,\n        description\n      } = parseSitcomConcept(sitcomConcept || '');\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Generated Sitcom Concept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Generating sitcom concept...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            mt: 2\n          },\n          children: [title && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 'bold',\n              mb: 1\n            },\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              whiteSpace: 'pre-line'\n            },\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this);\n    }\n    if (step === 5) {\n      // Outline step\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Generated Outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Generating outline...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            mt: 2\n          },\n          children: formatOutline(outline)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Validation for keywords step\n  const allKeywordsFilled = categories.every(cat => keywords[cat.key].trim() !== '');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Sitcom Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      sx: {\n        mb: 4\n      },\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), renderStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: activeStep === 0 || loading,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleNext,\n        disabled: loading || activeStep === 0 && !apiKey || activeStep === 4 && loading || activeStep === 5 && loading,\n        children: loading && (activeStep === 1 || activeStep === 4 || activeStep === 5) ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this) : activeStep === steps.length - 1 ? 'Finish' : 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cMhdtSiIkyiFSHBgPKIKiQhnW64=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","Typography","Box","Paper","Stepper","Step","StepLabel","CircularProgress","Alert","LinearProgress","jsxDEV","_jsxDEV","API_BASE_URL","steps","categories","key","label","prompt","parseSitcomConcept","concept","match","title","trim","description","formatOutline","outline","lines","split","filter","line","elements","forEach","idx","startsWith","push","sx","mb","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","component","fontWeight","App","_s","activeStep","setActiveStep","apiKey","setApiKey","keywords","setKeywords","setting","characters","themes","tone_genre","sitcomConcept","setSitcomConcept","setOutline","loading","setLoading","error","setError","progress","setProgress","generateConcept","generateOutline","response","fetch","method","headers","body","JSON","stringify","data","json","Error","err","message","handleNext","value","interval","setInterval","clearInterval","prev","handleBack","handleKeywordChange","category","event","target","renderStepContent","step","variant","gutterBottom","fullWidth","type","onChange","e","margin","textAlign","py","map","cat","helperText","elevation","p","mt","whiteSpace","allKeywordsFilled","every","maxWidth","align","severity","display","justifyContent","disabled","onClick","size","color","length","_c","$RefreshReg$"],"sources":["/Users/rheajaisinghani/Desktop/LLMs Class/lights-camera-reACTion/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Typography, \n  Box,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nconst API_BASE_URL = 'http://127.0.0.1:5000/api';\n\nconst steps = [\n  'API Key',\n  'Initializing',\n  'Keywords',\n  'Confirm Keywords',\n  'Sitcom Concept',\n  'Outline'\n];\n\nconst categories = [\n  { key: 'setting', label: 'Setting', prompt: 'Enter settings/locations (comma-separated):' },\n  { key: 'characters', label: 'Characters', prompt: 'Enter main characters (comma-separated):' },\n  { key: 'themes', label: 'Themes', prompt: 'Enter themes/ideas (comma-separated):' },\n  { key: 'tone_genre', label: 'Tone/Genre', prompt: 'Enter tone or genre (comma-separated):' }\n];\n\nfunction parseSitcomConcept(concept) {\n  // Try to extract the title and description using regex\n  const match = concept.match(/Title:\\s*\"?([^\"]+)\"?\\s*Description:?\\s*(.*)/is);\n  if (match) {\n    return {\n      title: match[1].trim(),\n      description: match[2].trim()\n    };\n  }\n  // fallback: just return the whole thing as description\n  return { title: '', description: concept };\n}\n\nfunction formatOutline(outline) {\n  if (!outline) return '';\n  // Split into lines\n  const lines = outline.split('\\n').filter(line => line.trim() !== '');\n  const elements = [];\n  lines.forEach((line, idx) => {\n    if (line.startsWith('Episode Concept:')) {\n      elements.push(\n        <Typography key={`epconcept-${idx}`} sx={{ mb: 2 }}>\n          <b>Episode Concept:</b> {line.replace('Episode Concept:', '').trim()}\n        </Typography>\n      );\n    } else if (line.match(/^Scene \\d+:/)) {\n      // Split scene number/title from description\n      const match = line.match(/^(Scene \\d+:\\s*\"[^\"]+\"\\s*)(.*)/);\n      if (match) {\n        elements.push(\n          <Box key={`scene-${idx}`} sx={{ mb: 2 }}>\n            <Typography component=\"span\" sx={{ fontWeight: 'bold' }}>\n              {match[1]}\n            </Typography>\n            <Typography component=\"span\">{match[2]}</Typography>\n          </Box>\n        );\n      } else {\n        elements.push(\n          <Typography key={`scene-${idx}`} sx={{ mb: 2 }}>\n            {line}\n          </Typography>\n        );\n      }\n    } else {\n      elements.push(\n        <Typography key={`other-${idx}`} sx={{ mb: 2 }}>\n          {line}\n        </Typography>\n      );\n    }\n  });\n  return elements;\n}\n\nfunction App() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [apiKey, setApiKey] = useState('');\n  const [keywords, setKeywords] = useState({\n    setting: '',\n    characters: '',\n    themes: '',\n    tone_genre: ''\n  });\n  const [sitcomConcept, setSitcomConcept] = useState('');\n  const [outline, setOutline] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  // Generate sitcom concept when landing on the sitcom concept step\n  useEffect(() => {\n    if (activeStep === 4 && !sitcomConcept) {\n      generateConcept();\n    }\n    // eslint-disable-next-line\n  }, [activeStep]);\n\n  // Generate outline when landing on the outline step\n  useEffect(() => {\n    if (activeStep === 5 && !outline) {\n      generateOutline();\n    }\n    // eslint-disable-next-line\n  }, [activeStep]);\n\n  const generateConcept = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-concept`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, keywords })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setSitcomConcept(data.concept);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateOutline = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-outline`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, concept: sitcomConcept })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setOutline(data.outline);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleNext = async () => {\n    setError('');\n    // Simulate initialization\n    if (activeStep === 1) {\n      setProgress(0);\n      setLoading(true);\n      let value = 0;\n      const interval = setInterval(() => {\n        value += 10;\n        setProgress(value);\n        if (value >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          setActiveStep((prev) => prev + 1);\n        }\n      }, 100);\n      return;\n    }\n    setActiveStep((prev) => prev + 1);\n  };\n\n  const handleBack = () => {\n    setError('');\n    setActiveStep((prev) => prev - 1);\n  };\n\n  const handleKeywordChange = (category) => (event) => {\n    setKeywords({\n      ...keywords,\n      [category]: event.target.value\n    });\n  };\n\n  const renderStepContent = (step) => {\n    if (step === 0) {\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter your OpenAI API Key\n          </Typography>\n          <TextField\n            fullWidth\n            type=\"password\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            margin=\"normal\"\n          />\n        </Box>\n      );\n    }\n    if (step === 1) {\n      return (\n        <Box sx={{ textAlign: 'center', py: 6 }}>\n          <LinearProgress variant=\"determinate\" value={progress} sx={{ mb: 2 }} />\n          <Typography variant=\"h6\">Initializing embedding model and AI agents...</Typography>\n        </Box>\n      );\n    }\n    if (step === 2) {\n      // All keyword categories on one screen\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Enter Keywords for Your Sitcom\n          </Typography>\n          {categories.map((cat) => (\n            <TextField\n              key={cat.key}\n              fullWidth\n              label={cat.label}\n              value={keywords[cat.key]}\n              onChange={handleKeywordChange(cat.key)}\n              margin=\"normal\"\n              helperText={cat.prompt}\n              sx={{ mb: 2 }}\n            />\n          ))}\n        </Box>\n      );\n    }\n    if (step === 3) {\n      // Confirmation step\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Confirm Your Keywords\n          </Typography>\n          <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n            {categories.map((cat) => (\n              <Box key={cat.key} sx={{ mb: 1 }}>\n                <Typography variant=\"subtitle1\">{cat.label}:</Typography>\n                <Typography>{keywords[cat.key]}</Typography>\n              </Box>\n            ))}\n          </Paper>\n        </Box>\n      );\n    }\n    if (step === 4) {\n      // Sitcom concept step\n      const { title, description } = parseSitcomConcept(sitcomConcept || '');\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Generated Sitcom Concept\n          </Typography>\n          {loading ? (\n            <Box sx={{ textAlign: 'center', py: 6 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography>Generating sitcom concept...</Typography>\n            </Box>\n          ) : (\n            <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n              {title && (\n                <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\n                  {title}\n                </Typography>\n              )}\n              <Typography sx={{ whiteSpace: 'pre-line' }}>\n                {description}\n              </Typography>\n            </Paper>\n          )}\n        </Box>\n      );\n    }\n    if (step === 5) {\n      // Outline step\n      return (\n        <Box>\n          <Typography variant=\"h6\" gutterBottom>\n            Generated Outline\n          </Typography>\n          {loading ? (\n            <Box sx={{ textAlign: 'center', py: 6 }}>\n              <CircularProgress sx={{ mb: 2 }} />\n              <Typography>Generating outline...</Typography>\n            </Box>\n          ) : (\n            <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n              {formatOutline(outline)}\n            </Paper>\n          )}\n        </Box>\n      );\n    }\n    return null;\n  };\n\n  // Validation for keywords step\n  const allKeywordsFilled = categories.every(cat => keywords[cat.key].trim() !== '');\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Sitcom Generator\n      </Typography>\n      \n      <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {renderStepContent(activeStep)}\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n        <Button\n          disabled={activeStep === 0 || loading}\n          onClick={handleBack}\n        >\n          Back\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleNext}\n          disabled={\n            loading ||\n            (activeStep === 0 && !apiKey) ||\n            (activeStep === 4 && loading) ||\n            (activeStep === 5 && loading)\n          }\n        >\n          {loading && (activeStep === 1 || activeStep === 4 || activeStep === 5) ? (\n            <CircularProgress size={24} color=\"inherit\" />\n          ) : (\n            activeStep === steps.length - 1 ? 'Finish' : 'Next'\n          )}\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
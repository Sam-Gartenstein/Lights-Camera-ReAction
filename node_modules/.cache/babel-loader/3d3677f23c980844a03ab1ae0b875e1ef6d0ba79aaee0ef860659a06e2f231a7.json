{"ast":null,"code":"var _jsxFileName = \"/Users/rheajaisinghani/Desktop/LLMs Class/lights-camera-reACTion/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button, Typography, Box, Paper, Stepper, Step, StepLabel, CircularProgress, Alert, Modal } from '@mui/material';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000/api';\nconst steps = ['API Key', 'Initializing', 'Keywords', 'Confirm Keywords', 'Sitcom Concept', 'Outline'];\nconst categories = [{\n  key: 'setting',\n  label: 'Setting',\n  prompt: 'Enter settings/locations (comma-separated):'\n}, {\n  key: 'characters',\n  label: 'Characters',\n  prompt: 'Enter main characters (comma-separated):'\n}, {\n  key: 'themes',\n  label: 'Themes',\n  prompt: 'Enter themes/ideas (comma-separated):'\n}, {\n  key: 'tone_genre',\n  label: 'Tone/Genre',\n  prompt: 'Enter tone or genre (comma-separated):'\n}];\nfunction parseSitcomConcept(concept) {\n  // Try to extract the title and description using regex\n  const match = concept.match(/Title:\\s*\"?([^\"]+)\"?\\s*Description:?\\s*(.*)/is);\n  if (match) {\n    return {\n      title: match[1].trim(),\n      description: match[2].trim()\n    };\n  }\n  // fallback: just return the whole thing as description\n  return {\n    title: '',\n    description: concept\n  };\n}\nfunction formatOutline(outline) {\n  if (!outline) return '';\n  // Split into lines\n  const lines = outline.split('\\n').filter(line => line.trim() !== '');\n  const elements = [];\n  lines.forEach((line, idx) => {\n    if (line.startsWith('Episode Concept:')) {\n      elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Episode Concept:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \", line.replace('Episode Concept:', '').trim()]\n      }, `epconcept-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    } else if (line.match(/^Scene \\d+:/)) {\n      // Split scene number/title from description\n      const match = line.match(/^(Scene \\d+:\\s*\"[^\"]+\"\\s*)(.*)/);\n      if (match) {\n        elements.push(/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: match[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            children: match[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, `scene-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this));\n      } else {\n        elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 2\n          },\n          children: line\n        }, `scene-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      elements.push(/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mb: 2\n        },\n        children: line\n      }, `other-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this));\n    }\n  });\n  return elements;\n}\nfunction App() {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [apiKey, setApiKey] = useState('');\n  const [keywords, setKeywords] = useState({\n    setting: '',\n    characters: '',\n    themes: '',\n    tone_genre: ''\n  });\n  const [sitcomConcept, setSitcomConcept] = useState('');\n  const [outline, setOutline] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [validationOpen, setValidationOpen] = useState(false);\n  const [validationResult, setValidationResult] = useState('');\n  const [validationLoading, setValidationLoading] = useState(false);\n  const [sceneFlow, setSceneFlow] = useState(false);\n  const [scene1Script, setScene1Script] = useState('');\n\n  // Generate sitcom concept when landing on the sitcom concept step\n  useEffect(() => {\n    if (!sceneFlow && activeStep === 4 && !sitcomConcept) {\n      generateConcept();\n    }\n    // eslint-disable-next-line\n  }, [activeStep, sceneFlow]);\n\n  // Generate outline when landing on the outline step\n  useEffect(() => {\n    if (!sceneFlow && activeStep === 5 && !outline) {\n      generateOutline();\n    }\n    // eslint-disable-next-line\n  }, [activeStep, sceneFlow]);\n\n  // Generate Scene 1 script when entering scene flow\n  useEffect(() => {\n    if (sceneFlow && activeStep === 0 && !scene1Script) {\n      generateScene1();\n    }\n    // eslint-disable-next-line\n  }, [sceneFlow, activeStep]);\n  const generateConcept = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-concept`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          keywords\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setSitcomConcept(data.concept);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateOutline = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-outline`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          concept: sitcomConcept\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setOutline(data.outline);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateScene1 = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-scene-1`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          outline\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setScene1Script(data.scene1);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const validateOutline = async () => {\n    setValidationLoading(true);\n    setValidationResult('');\n    setValidationOpen(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/validate-outline`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apiKey,\n          concept: sitcomConcept,\n          outline\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setValidationResult(data.validation);\n    } catch (err) {\n      setValidationResult('Error: ' + err.message);\n    } finally {\n      setValidationLoading(false);\n    }\n  };\n  const handleNext = async () => {\n    setError('');\n    // Simulate initialization\n    if (!sceneFlow && activeStep === 1) {\n      setProgress(0);\n      setLoading(true);\n      let value = 0;\n      const interval = setInterval(() => {\n        value += 10;\n        setProgress(value);\n        if (value >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          setActiveStep(prev => prev + 1);\n        }\n      }, 100);\n      return;\n    }\n    // Start scene flow after outline\n    if (!sceneFlow && activeStep === 5) {\n      setSceneFlow(true);\n      setActiveStep(0);\n      setScene1Script('');\n      return;\n    }\n    setActiveStep(prev => prev + 1);\n  };\n  const handleBack = () => {\n    setError('');\n    if (sceneFlow && activeStep === 0) {\n      setSceneFlow(false);\n      setActiveStep(5); // Go back to outline step\n      return;\n    }\n    setActiveStep(prev => prev - 1);\n  };\n  const handleKeywordChange = category => event => {\n    setKeywords({\n      ...keywords,\n      [category]: event.target.value\n    });\n  };\n\n  // Scene stepper\n  const sceneSteps = ['Scene 1'];\n  const renderStepContent = step => {\n    if (!sceneFlow) {\n      if (step === 0) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Enter your OpenAI API Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"password\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this);\n      }\n      if (step === 1) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Initializing embedding model and AI agents...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this);\n      }\n      if (step === 2) {\n        // All keyword categories on one screen\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Enter Keywords for Your Sitcom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: cat.label,\n            value: keywords[cat.key],\n            onChange: handleKeywordChange(cat.key),\n            margin: \"normal\",\n            helperText: cat.prompt,\n            sx: {\n              mb: 2\n            }\n          }, cat.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this);\n      }\n      if (step === 3) {\n        // Confirmation step\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Confirm Your Keywords\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              mt: 2\n            },\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: [cat.label, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: keywords[cat.key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)]\n            }, cat.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this);\n      }\n      if (step === 4) {\n        // Sitcom concept step\n        const {\n          title,\n          description\n        } = parseSitcomConcept(sitcomConcept || '');\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Generated Sitcom Concept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              py: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Generating sitcom concept...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              mt: 2\n            },\n            children: [title && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                fontWeight: 'bold',\n                mb: 1\n              },\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                whiteSpace: 'pre-line'\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this);\n      }\n      if (step === 5) {\n        // Outline step\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Generated Outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              mb: 2,\n              mr: 2\n            },\n            onClick: validateOutline,\n            disabled: validationLoading || loading,\n            children: [validationLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 36\n            }, this) : null, \"Validate Outline\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            sx: {\n              mb: 2\n            },\n            onClick: handleNext,\n            disabled: loading,\n            children: \"Generate Scripts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            open: validationOpen,\n            onClose: () => setValidationOpen(false),\n            \"aria-labelledby\": \"validation-modal-title\",\n            \"aria-describedby\": \"validation-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                bgcolor: 'background.paper',\n                boxShadow: 24,\n                p: 4,\n                borderRadius: 2,\n                minWidth: 300,\n                maxWidth: 500\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                id: \"validation-modal-title\",\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Outline Validation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                id: \"validation-modal-description\",\n                sx: {\n                  whiteSpace: 'pre-line'\n                },\n                children: validationResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 2,\n                  textAlign: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setValidationOpen(false),\n                  variant: \"contained\",\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              py: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Generating outline...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              mt: 2\n            },\n            children: formatOutline(outline)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      // Scene generation flow\n      if (step === 0) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Scene 1 Script\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              py: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Generating Scene 1 script...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                whiteSpace: 'pre-line'\n              },\n              children: scene1Script || 'No script generated.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this);\n      }\n    }\n    return null;\n  };\n\n  // Validation for keywords step\n  const allKeywordsFilled = categories.every(cat => keywords[cat.key].trim() !== '');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Sitcom Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      sx: {\n        mb: 4\n      },\n      children: sceneFlow ? sceneSteps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 15\n      }, this)) : steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }, this), renderStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        disabled: activeStep === 0 || loading,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), !sceneFlow && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleNext,\n        disabled: loading || activeStep === 0 && !apiKey || activeStep === 4 && loading || activeStep === 5 && loading,\n        children: loading && (activeStep === 1 || activeStep === 4 || activeStep === 5) ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this) : activeStep === steps.length - 1 ? 'Finish' : 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tv7w2ZRhJezwQkWxZmYh8QF5z30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","Typography","Box","Paper","Stepper","Step","StepLabel","CircularProgress","Alert","Modal","LinearProgress","jsxDEV","_jsxDEV","API_BASE_URL","steps","categories","key","label","prompt","parseSitcomConcept","concept","match","title","trim","description","formatOutline","outline","lines","split","filter","line","elements","forEach","idx","startsWith","push","sx","mb","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","component","fontWeight","App","_s","activeStep","setActiveStep","apiKey","setApiKey","keywords","setKeywords","setting","characters","themes","tone_genre","sitcomConcept","setSitcomConcept","setOutline","loading","setLoading","error","setError","progress","setProgress","validationOpen","setValidationOpen","validationResult","setValidationResult","validationLoading","setValidationLoading","sceneFlow","setSceneFlow","scene1Script","setScene1Script","generateConcept","generateOutline","generateScene1","response","fetch","method","headers","body","JSON","stringify","data","json","Error","err","message","scene1","validateOutline","validation","handleNext","value","interval","setInterval","clearInterval","prev","handleBack","handleKeywordChange","category","event","target","sceneSteps","renderStepContent","step","variant","gutterBottom","fullWidth","type","onChange","e","margin","textAlign","py","map","cat","helperText","elevation","p","mt","whiteSpace","mr","onClick","disabled","size","open","onClose","position","top","left","transform","bgcolor","boxShadow","borderRadius","minWidth","maxWidth","id","allKeywordsFilled","every","align","severity","display","justifyContent","color","length","_c","$RefreshReg$"],"sources":["/Users/rheajaisinghani/Desktop/LLMs Class/lights-camera-reACTion/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  TextField, \n  Button, \n  Typography, \n  Box,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  CircularProgress,\n  Alert,\n  Modal\n} from '@mui/material';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nconst API_BASE_URL = 'http://127.0.0.1:5000/api';\n\nconst steps = [\n  'API Key',\n  'Initializing',\n  'Keywords',\n  'Confirm Keywords',\n  'Sitcom Concept',\n  'Outline'\n];\n\nconst categories = [\n  { key: 'setting', label: 'Setting', prompt: 'Enter settings/locations (comma-separated):' },\n  { key: 'characters', label: 'Characters', prompt: 'Enter main characters (comma-separated):' },\n  { key: 'themes', label: 'Themes', prompt: 'Enter themes/ideas (comma-separated):' },\n  { key: 'tone_genre', label: 'Tone/Genre', prompt: 'Enter tone or genre (comma-separated):' }\n];\n\nfunction parseSitcomConcept(concept) {\n  // Try to extract the title and description using regex\n  const match = concept.match(/Title:\\s*\"?([^\"]+)\"?\\s*Description:?\\s*(.*)/is);\n  if (match) {\n    return {\n      title: match[1].trim(),\n      description: match[2].trim()\n    };\n  }\n  // fallback: just return the whole thing as description\n  return { title: '', description: concept };\n}\n\nfunction formatOutline(outline) {\n  if (!outline) return '';\n  // Split into lines\n  const lines = outline.split('\\n').filter(line => line.trim() !== '');\n  const elements = [];\n  lines.forEach((line, idx) => {\n    if (line.startsWith('Episode Concept:')) {\n      elements.push(\n        <Typography key={`epconcept-${idx}`} sx={{ mb: 2 }}>\n          <b>Episode Concept:</b> {line.replace('Episode Concept:', '').trim()}\n        </Typography>\n      );\n    } else if (line.match(/^Scene \\d+:/)) {\n      // Split scene number/title from description\n      const match = line.match(/^(Scene \\d+:\\s*\"[^\"]+\"\\s*)(.*)/);\n      if (match) {\n        elements.push(\n          <Box key={`scene-${idx}`} sx={{ mb: 2 }}>\n            <Typography component=\"span\" sx={{ fontWeight: 'bold' }}>\n              {match[1]}\n            </Typography>\n            <Typography component=\"span\">{match[2]}</Typography>\n          </Box>\n        );\n      } else {\n        elements.push(\n          <Typography key={`scene-${idx}`} sx={{ mb: 2 }}>\n            {line}\n          </Typography>\n        );\n      }\n    } else {\n      elements.push(\n        <Typography key={`other-${idx}`} sx={{ mb: 2 }}>\n          {line}\n        </Typography>\n      );\n    }\n  });\n  return elements;\n}\n\nfunction App() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [apiKey, setApiKey] = useState('');\n  const [keywords, setKeywords] = useState({\n    setting: '',\n    characters: '',\n    themes: '',\n    tone_genre: ''\n  });\n  const [sitcomConcept, setSitcomConcept] = useState('');\n  const [outline, setOutline] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [validationOpen, setValidationOpen] = useState(false);\n  const [validationResult, setValidationResult] = useState('');\n  const [validationLoading, setValidationLoading] = useState(false);\n  const [sceneFlow, setSceneFlow] = useState(false);\n  const [scene1Script, setScene1Script] = useState('');\n\n  // Generate sitcom concept when landing on the sitcom concept step\n  useEffect(() => {\n    if (!sceneFlow && activeStep === 4 && !sitcomConcept) {\n      generateConcept();\n    }\n    // eslint-disable-next-line\n  }, [activeStep, sceneFlow]);\n\n  // Generate outline when landing on the outline step\n  useEffect(() => {\n    if (!sceneFlow && activeStep === 5 && !outline) {\n      generateOutline();\n    }\n    // eslint-disable-next-line\n  }, [activeStep, sceneFlow]);\n\n  // Generate Scene 1 script when entering scene flow\n  useEffect(() => {\n    if (sceneFlow && activeStep === 0 && !scene1Script) {\n      generateScene1();\n    }\n    // eslint-disable-next-line\n  }, [sceneFlow, activeStep]);\n\n  const generateConcept = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-concept`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, keywords })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setSitcomConcept(data.concept);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateOutline = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-outline`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, concept: sitcomConcept })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setOutline(data.outline);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateScene1 = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch(`${API_BASE_URL}/generate-scene-1`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, outline })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setScene1Script(data.scene1);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const validateOutline = async () => {\n    setValidationLoading(true);\n    setValidationResult('');\n    setValidationOpen(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/validate-outline`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ apiKey, concept: sitcomConcept, outline })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setValidationResult(data.validation);\n    } catch (err) {\n      setValidationResult('Error: ' + err.message);\n    } finally {\n      setValidationLoading(false);\n    }\n  };\n\n  const handleNext = async () => {\n    setError('');\n    // Simulate initialization\n    if (!sceneFlow && activeStep === 1) {\n      setProgress(0);\n      setLoading(true);\n      let value = 0;\n      const interval = setInterval(() => {\n        value += 10;\n        setProgress(value);\n        if (value >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          setActiveStep((prev) => prev + 1);\n        }\n      }, 100);\n      return;\n    }\n    // Start scene flow after outline\n    if (!sceneFlow && activeStep === 5) {\n      setSceneFlow(true);\n      setActiveStep(0);\n      setScene1Script('');\n      return;\n    }\n    setActiveStep((prev) => prev + 1);\n  };\n\n  const handleBack = () => {\n    setError('');\n    if (sceneFlow && activeStep === 0) {\n      setSceneFlow(false);\n      setActiveStep(5); // Go back to outline step\n      return;\n    }\n    setActiveStep((prev) => prev - 1);\n  };\n\n  const handleKeywordChange = (category) => (event) => {\n    setKeywords({\n      ...keywords,\n      [category]: event.target.value\n    });\n  };\n\n  // Scene stepper\n  const sceneSteps = ['Scene 1'];\n\n  const renderStepContent = (step) => {\n    if (!sceneFlow) {\n      if (step === 0) {\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Enter your OpenAI API Key\n            </Typography>\n            <TextField\n              fullWidth\n              type=\"password\"\n              value={apiKey}\n              onChange={(e) => setApiKey(e.target.value)}\n              margin=\"normal\"\n            />\n          </Box>\n        );\n      }\n      if (step === 1) {\n        return (\n          <Box sx={{ textAlign: 'center', py: 6 }}>\n            <LinearProgress variant=\"determinate\" value={progress} sx={{ mb: 2 }} />\n            <Typography variant=\"h6\">Initializing embedding model and AI agents...</Typography>\n          </Box>\n        );\n      }\n      if (step === 2) {\n        // All keyword categories on one screen\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Enter Keywords for Your Sitcom\n            </Typography>\n            {categories.map((cat) => (\n              <TextField\n                key={cat.key}\n                fullWidth\n                label={cat.label}\n                value={keywords[cat.key]}\n                onChange={handleKeywordChange(cat.key)}\n                margin=\"normal\"\n                helperText={cat.prompt}\n                sx={{ mb: 2 }}\n              />\n            ))}\n          </Box>\n        );\n      }\n      if (step === 3) {\n        // Confirmation step\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirm Your Keywords\n            </Typography>\n            <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n              {categories.map((cat) => (\n                <Box key={cat.key} sx={{ mb: 1 }}>\n                  <Typography variant=\"subtitle1\">{cat.label}:</Typography>\n                  <Typography>{keywords[cat.key]}</Typography>\n                </Box>\n              ))}\n            </Paper>\n          </Box>\n        );\n      }\n      if (step === 4) {\n        // Sitcom concept step\n        const { title, description } = parseSitcomConcept(sitcomConcept || '');\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Generated Sitcom Concept\n            </Typography>\n            {loading ? (\n              <Box sx={{ textAlign: 'center', py: 6 }}>\n                <CircularProgress sx={{ mb: 2 }} />\n                <Typography>Generating sitcom concept...</Typography>\n              </Box>\n            ) : (\n              <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n                {title && (\n                  <Typography variant=\"h5\" sx={{ fontWeight: 'bold', mb: 1 }}>\n                    {title}\n                  </Typography>\n                )}\n                <Typography sx={{ whiteSpace: 'pre-line' }}>\n                  {description}\n                </Typography>\n              </Paper>\n            )}\n          </Box>\n        );\n      }\n      if (step === 5) {\n        // Outline step\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Generated Outline\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              sx={{ mb: 2, mr: 2 }}\n              onClick={validateOutline}\n              disabled={validationLoading || loading}\n            >\n              {validationLoading ? <CircularProgress size={20} sx={{ mr: 1 }} /> : null}\n              Validate Outline\n            </Button>\n            <Button\n              variant=\"contained\"\n              sx={{ mb: 2 }}\n              onClick={handleNext}\n              disabled={loading}\n            >\n              Generate Scripts\n            </Button>\n            <Modal\n              open={validationOpen}\n              onClose={() => setValidationOpen(false)}\n              aria-labelledby=\"validation-modal-title\"\n              aria-describedby=\"validation-modal-description\"\n            >\n              <Box sx={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                bgcolor: 'background.paper',\n                boxShadow: 24,\n                p: 4,\n                borderRadius: 2,\n                minWidth: 300,\n                maxWidth: 500\n              }}>\n                <Typography id=\"validation-modal-title\" variant=\"h6\" gutterBottom>\n                  Outline Validation\n                </Typography>\n                <Typography id=\"validation-modal-description\" sx={{ whiteSpace: 'pre-line' }}>\n                  {validationResult}\n                </Typography>\n                <Box sx={{ mt: 2, textAlign: 'right' }}>\n                  <Button onClick={() => setValidationOpen(false)} variant=\"contained\">Close</Button>\n                </Box>\n              </Box>\n            </Modal>\n            {loading ? (\n              <Box sx={{ textAlign: 'center', py: 6 }}>\n                <CircularProgress sx={{ mb: 2 }} />\n                <Typography>Generating outline...</Typography>\n              </Box>\n            ) : (\n              <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n                {formatOutline(outline)}\n              </Paper>\n            )}\n          </Box>\n        );\n      }\n    } else {\n      // Scene generation flow\n      if (step === 0) {\n        return (\n          <Box>\n            <Typography variant=\"h6\" gutterBottom>\n              Scene 1 Script\n            </Typography>\n            {loading ? (\n              <Box sx={{ textAlign: 'center', py: 6 }}>\n                <CircularProgress sx={{ mb: 2 }} />\n                <Typography>Generating Scene 1 script...</Typography>\n              </Box>\n            ) : (\n              <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n                <Typography sx={{ whiteSpace: 'pre-line' }}>{scene1Script || 'No script generated.'}</Typography>\n              </Paper>\n            )}\n          </Box>\n        );\n      }\n    }\n    return null;\n  };\n\n  // Validation for keywords step\n  const allKeywordsFilled = categories.every(cat => keywords[cat.key].trim() !== '');\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n        Sitcom Generator\n      </Typography>\n      \n      <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n        {sceneFlow\n          ? sceneSteps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))\n          : steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n      </Stepper>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {renderStepContent(activeStep)}\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n        <Button\n          disabled={activeStep === 0 || loading}\n          onClick={handleBack}\n        >\n          Back\n        </Button>\n        {!sceneFlow && (\n          <Button\n            variant=\"contained\"\n            onClick={handleNext}\n            disabled={\n              loading ||\n              (activeStep === 0 && !apiKey) ||\n              (activeStep === 4 && loading) ||\n              (activeStep === 5 && loading)\n            }\n          >\n            {loading && (activeStep === 1 || activeStep === 4 || activeStep === 5) ? (\n              <CircularProgress size={24} color=\"inherit\" />\n            ) : (\n              activeStep === steps.length - 1 ? 'Finish' : 'Next'\n            )}\n          </Button>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}